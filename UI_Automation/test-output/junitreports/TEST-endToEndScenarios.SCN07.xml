<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="16" hostname="LW-NIRUSH" name="endToEndScenarios.SCN07" tests="17" failures="0" timestamp="11 Jun 2018 18:09:12 GMT" time="0.050" errors="1">
  <testcase name="openApplication" time="0.050" classname="endToEndScenarios.SCN07">
    <error type="org.openqa.selenium.WebDriverException" message="Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10
Build info: version: &#039;3.7.1&#039;, revision: &#039;8a0099a&#039;, time: &#039;2017-11-06T21:07:36.161Z&#039;
System info: host: &#039;LW-NIRUSH&#039;, ip: &#039;192.168.1.169&#039;, os.name: &#039;Windows 10&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;10.0&#039;, java.version: &#039;1.8.0_161&#039;
Driver info: driver.version: FirefoxDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10Build info: version: '3.7.1', revision: '8a0099a', time: '2017-11-06T21:07:36.161Z'System info: host: 'LW-NIRUSH', ip: '192.168.1.169', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_161'Driver info: driver.version: FirefoxDriverat org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:116)at org.openqa.selenium.firefox.FirefoxOptions.getBinary(FirefoxOptions.java:218)at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:155)at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:120)at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:98)at generic.BaseTest.openApplication(BaseTest.java:71)at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)at java.lang.reflect.Method.invoke(Unknown Source)at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:451)at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)at org.testng.internal.Invoker.invokeMethod(Invoker.java:516)at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:707)at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:979)at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)at org.testng.TestRunner.privateRun(TestRunner.java:648)at org.testng.TestRunner.run(TestRunner.java:505)at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)at org.testng.SuiteRunner.run(SuiteRunner.java:364)at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)at org.testng.TestNG.runSuites(TestNG.java:1028)at org.testng.TestNG.run(TestNG.java:996)at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)]]>
    </error>
  </testcase> <!-- openApplication -->
  <testcase name="floatRateUpdate_1" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- floatRateUpdate_1 -->
  <testcase name="updates_1" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- updates_1 -->
  <testcase name="partialPayoff_1" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- partialPayoff_1 -->
  <testcase name="floatRateUpdate_2" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- floatRateUpdate_2 -->
  <testcase name="updates_2" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- updates_2 -->
  <testcase name="receiptPostingSetup_1" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- receiptPostingSetup_1 -->
  <testcase name="accrual_NonAccrualSetup_1" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- accrual_NonAccrualSetup_1 -->
  <testcase name="floatRateUpdate_3" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- floatRateUpdate_3 -->
  <testcase name="updates_3" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- updates_3 -->
  <testcase name="receiptPostingSetup_2" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- receiptPostingSetup_2 -->
  <testcase name="accrual_NonAccrualSetup_2" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- accrual_NonAccrualSetup_2 -->
  <testcase name="partialPayoff_2" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- partialPayoff_2 -->
  <testcase name="floatRateUpdate_4" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- floatRateUpdate_4 -->
  <testcase name="updates_4" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- updates_4 -->
  <testcase name="receiptPostingSetup_3" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- receiptPostingSetup_3 -->
  <testcase name="fullPayoff" time="0.000" classname="endToEndScenarios.SCN07">
    <skipped/>
  </testcase> <!-- fullPayoff -->
</testsuite> <!-- endToEndScenarios.SCN07 -->
